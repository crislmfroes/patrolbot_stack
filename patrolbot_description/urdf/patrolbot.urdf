<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from patrolbot.xacro                | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="patrolbot">
  <link name="base_footprint">
    </link>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <inertial>
      <mass value="1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.001" iyy="1" iyz="0.0" izz="0.001"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/hull.stl"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/hull.stl"/>
      </geometry>
    </visual>
  </link>
  <link name="right_drive_wheel">
    <collision>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/right_wheel.stl"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/right_wheel.stl"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="right_drive_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_drive_wheel"/>
    <origin xyz="0.0685 -0.147 -0.138"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <transmission name="right_drive_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_drive_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_drive_wheel_motor">
      <mechanicalReducation>1</mechanicalReducation>
    </actuator>
  </transmission>
  <gazebo reference="right_drive_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
  </gazebo>
  <link name="left_drive_wheel">
    <collision>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/left_wheel.stl"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/left_wheel.stl"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="left_drive_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_drive_wheel"/>
    <origin xyz="0.0685 0.147 -0.138"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <transmission name="left_drive_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_drive_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_drive_wheel_motor">
      <mechanicalReducation>1</mechanicalReducation>
    </actuator>
  </transmission>
  <gazebo reference="left_drive_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
  </gazebo>
  <link name="front_caster_wheel">
    <collision>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/caster.stl"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/caster.stl"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="front_drive_wheel_joint" type="fixed">
    <origin xyz="0.2445 0 -0.1635"/>
    <parent link="base_link"/>
    <child link="front_caster_wheel"/>
  </joint>
  <gazebo reference="front_caster_wheel">
    <mu1 value="0.0001"/>
    <mu2 value="0.0001"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <link name="back_left_caster_wheel">
    <collision>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/caster.stl"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/caster.stl"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="back_left_drive_wheel_joint" type="fixed">
    <origin xyz="-0.2445 -0.111 -0.1635"/>
    <parent link="base_link"/>
    <child link="back_left_caster_wheel"/>
  </joint>
  <gazebo reference="back_left_caster_wheel">
    <mu1 value="0.0001"/>
    <mu2 value="0.0001"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <link name="back_right_caster_wheel">
    <collision>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/caster.stl"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <mesh filename="package://patrolbot_description/meshes/caster.stl"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="back_right_drive_wheel_joint" type="fixed">
    <origin xyz="-0.2445 0.111 -0.1635"/>
    <parent link="base_link"/>
    <child link="back_right_caster_wheel"/>
  </joint>
  <gazebo reference="back_right_caster_wheel">
    <mu1 value="0.0001"/>
    <mu2 value="0.0001"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <link name="laser">
    <inertial>
      <mass value="1.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00307156543804" ixy="0.0" ixz="0.0" iyy="0.00312849041527" iyz="0.0" izz="0.00196432421427"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- Origin of this mesh is the focal point of the LIDAR. -->
        <mesh filename="package://lms1xx/meshes/sick-lms1xx.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.05"/>
      <geometry>
        <box size="0.105 0.1 0.1"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="laser">
    <turnGravityOff>true</turnGravityOff>
    <sensor name="laser" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>50</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619</min_angle>
            <max_angle>2.35619</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
        <robotNamespace>/</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="laser_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.192 0 0.2895"/>
    <parent link="base_link"/>
    <child link="laser"/>
  </joint>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <!-- Plugin update rate in Hz -->
      <updateRate>50</updateRate>
      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>left_drive_wheel_joint</leftJoint>
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>right_drive_wheel_joint</rightJoint>
      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheelSeparation>0.294</wheelSeparation>
      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>0.402</wheelDiameter>
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>1.0</wheelAcceleration>
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>20</wheelTorque>
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>cmd_vel</commandTopic>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>odom</odometryTopic>
      <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>odom</odometryFrame>
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>1</odometrySource>
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>true</publishWheelTF>
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>true</publishOdom>
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>
      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
    </plugin>
  </gazebo>
</robot>

